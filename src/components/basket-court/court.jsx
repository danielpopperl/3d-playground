/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Shayan4321 (https://sketchfab.com/Shayan4321)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/basket-ball-court-65b160fdee7d42f8b0a7e99e0fc8ec5b
Title: BASKET BALL COURT
*/

import { useGLTF } from "@react-three/drei";
import { ConeCollider, CylinderCollider, RigidBody } from "@react-three/rapier";
import { useRef, useState } from "react";

export function Court(props) {
  const colliderRef = useRef();

  const [colliderOrderRight, setColliderOrderRight] = useState("empty_right");
  const [colliderOrderLeft, setColliderOrderLeft] = useState("empty_left");

  const { nodes, materials } = useGLTF("/3d/basket-court/scene.gltf");
  return (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          userData={{ name: "Sketchfab_model" }}
        >
          <group
            name="1f5fe85e294844d6975298be9cd62e0ffbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
            userData={{ name: "1f5fe85e294844d6975298be9cd62e0f.fbx" }}
          >
            <group name="RootNode" userData={{ name: "RootNode" }}>
              <group
                name="Light"
                position={[-30.422, 1936.748, 29.007]}
                rotation={[1.89, 0.881, -2.045]}
                scale={222.559}
                userData={{ name: "Light" }}
              >
                <group
                  name="Object_4"
                  rotation={[Math.PI / 2, 0, 0]}
                  userData={{ name: "Object_4" }}
                >
                  <group name="Object_5" userData={{ name: "Object_5" }} />
                </group>
              </group>
              <group
                name="Camera"
                position={[-1914.788, 5079.744, 3222.182]}
                rotation={[0, 1.029, -0.839]}
                scale={100}
                userData={{ name: "Camera" }}
              >
                <group name="Object_7" userData={{ name: "Object_7" }} />
              </group>
              <group
                name="Cube"
                position={[-32.247, 471.878, 43.427]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={258.845}
                userData={{ name: "Ground" }}
              >
                <RigidBody
                  type="fixed"
                  position={[0, 0, 0]}
                  colliders={"cuboid"}
                  restitution={1}
                >
                  <mesh
                    name="Cube_Material002_0"
                    geometry={nodes.Cube_Material002_0.geometry}
                    material={materials["Material.002"]}
                    userData={{ name: "Cube_Material.002_0" }}
                  />
                </RigidBody>
                <mesh
                  name="Cube_Material012_0"
                  geometry={nodes.Cube_Material012_0.geometry}
                  material={materials["Material.012"]}
                  userData={{ name: "Cube_Material.012_0" }}
                />
              </group>
              <group
                name="Plane"
                position={[-32.247, 492.743, 43.427]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={222.559}
                userData={{ name: "Plane" }}
              >
                <mesh
                  name="Plane_Material003_0"
                  geometry={nodes.Plane_Material003_0.geometry}
                  material={materials["Material.003"]}
                  userData={{ name: "Plane_Material.003_0" }}
                />
              </group>
              <group
                name="Plane001"
                position={[835.314, 1021.517, 43.427]}
                rotation={[3.142, -1.568, 3.142]}
                scale={[208.806, 110.773, 141.634]}
                userData={{ name: "Plane.001" }}
              >
                <RigidBody
                  type="fixed"
                  colliders={"hull"}
                  friction={1}
                  restitution={1}
                >
                  <mesh
                    name="Plane001_Material005_0"
                    geometry={nodes.Plane001_Material005_0.geometry}
                    material={materials["Material.005"]}
                    userData={{ name: "Plane.001_Material.005_0" }}
                  />
                  <mesh
                    name="Plane001_Material006_0"
                    geometry={nodes.Plane001_Material006_0.geometry}
                    material={materials["Material.006"]}
                    userData={{ name: "Plane.001_Material.006_0" }}
                  />
                  <mesh
                    name="Plane001_Material004_0"
                    geometry={nodes.Plane001_Material004_0.geometry}
                    material={materials.material_0}
                    userData={{ name: "Plane.001_Material.004_0" }}
                  />
                </RigidBody>
              </group>
              <group
                name="Cube001"
                position={[822.724, 950.6, 43.463]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={20.091}
                userData={{ name: "Cube.001" }}
              >
                <RigidBody type="fixed" colliders={"hull"}>
                  <mesh
                    name="Cube001_Material005_0"
                    geometry={nodes.Cube001_Material005_0.geometry}
                    material={materials["Material.005"]}
                    userData={{ name: "Cube.001_Material.005_0" }}
                  />
                </RigidBody>
              </group>

              <group
                name="Circle"
                position={[766.574, 951.488, 43.463]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={34.565}
                userData={{ name: "aro_direita" }}
              >
                <RigidBody type="fixed" colliders={false}>
                  <ConeCollider
                    name="basket-up"
                    ref={colliderRef}
                    args={[0.07, 0.7]}
                    position={[0, 0, 0]}
                    rotation={[Math.PI / 2, 0, 0]}
                    sensor={true}
                    onIntersectionEnter={() => {
                      // console.log(colliderOrder, "from top")
                      if (colliderOrderRight === "empty_right")
                        setColliderOrderRight("top_right");
                      if (colliderOrderRight === "botton_right")
                        setColliderOrderRight("empty_right");
                    }}
                  />

                  <CylinderCollider
                    name="basket-botton"
                    ref={colliderRef}
                    args={[0.07, 0.7]}
                    position={[0, 0, -0.6]}
                    rotation={[Math.PI / 2, 0, 0]}
                    sensor={true}
                    onIntersectionEnter={() => {
                      if (colliderOrderRight === "empty_right")
                        setColliderOrderRight("botton_right");
                      if (colliderOrderRight === "botton_right")
                        setColliderOrderRight("empty_right");
                      if (colliderOrderRight === "top_right") {
                        setColliderOrderRight("empty_right");
                        console.log("GOAL RIGHT");
                      }
                    }}
                  />

                  <mesh
                    geometry={nodes.Circle001_Material005_0.geometry}
                    material={materials["Material.005"]}
                  />
                </RigidBody>

                <RigidBody type="fixed" colliders={"trimesh"}>
                  <mesh visible={true} position={[0, 0, 0]}>
                    <torusGeometry args={[1.05, 0.1, 7, 30]} />
                    <meshPhysicalMaterial
                      color="blue"
                      opacity={0}
                      transparent
                    />
                  </mesh>
                </RigidBody>
              </group>
              <group
                name="Cylinder"
                position={[766.574, 914.923, 43.463]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={33.754}
                userData={{ name: "rede_direita" }}
              >
                <RigidBody type="fixed" colliders={"trimesh"}>
                  {/* <CylinderCollider
                    args={[0.8, 0.9, 1 * 0.7]} // altura, raio superior, raio inferior
                  /> */}

                  {/* <mesh position={[0, 0, 0.5]}>
                    <torusGeometry args={[0.8, 0.1, 7, 30]} />
                    <meshBasicMaterial side={2} color="red" />
                  </mesh> */}

                  <mesh
                    name="Cylinder__0"
                    geometry={nodes.Cylinder__0.geometry}
                    material={materials.Cylinder__0}
                    userData={{ name: "Cylinder__0" }}
                  />
                </RigidBody>
              </group>
              <group
                name="Cube002"
                position={[977.607, 511.866, 43.427]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[24.765, 31.635, 27.534]}
                userData={{ name: "Cube.002" }}
              >
                <mesh
                  name="Cube002_Material004_0"
                  geometry={nodes.Cube002_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cube.002_Material.004_0" }}
                />
                <mesh
                  name="Cube002_Material012_0"
                  geometry={nodes.Cube002_Material012_0.geometry}
                  material={materials["Material.012"]}
                  userData={{ name: "Cube.002_Material.012_0" }}
                />
              </group>
              <group
                name="Cylinder007"
                position={[660.797, 520.83, 676.811]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[5.383, 5.383, 71.106]}
                userData={{ name: "Cylinder.007" }}
              >
                <mesh
                  name="Cylinder007_Material004_0"
                  geometry={nodes.Cylinder007_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cylinder.007_Material.004_0" }}
                />
                <mesh
                  name="Cylinder007_Material002_0"
                  geometry={nodes.Cylinder007_Material002_0.geometry}
                  material={materials["Material.002"]}
                  userData={{ name: "Cylinder.007_Material.002_0" }}
                />
              </group>
              <group
                name="Cube005"
                position={[509.548, 590.745, -630.259]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={180.184}
                userData={{ name: "Cube.005" }}
              >
                <mesh
                  name="Cube005_Material002_0"
                  geometry={nodes.Cube005_Material002_0.geometry}
                  material={materials["Material.002"]}
                  userData={{ name: "Cube.005_Material.002_0" }}
                />
              </group>
              <group
                name="Cylinder009"
                position={[660.797, 520.83, -597.665]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[5.383, 5.383, 71.106]}
                userData={{ name: "Cylinder.009" }}
              >
                <mesh
                  name="Cylinder009_Material004_0"
                  geometry={nodes.Cylinder009_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cylinder.009_Material.004_0" }}
                />
              </group>
              <group
                name="Cylinder010"
                position={[364.109, 520.83, -597.665]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[5.383, 5.383, 71.106]}
                userData={{ name: "Cylinder.010" }}
              >
                <mesh
                  name="Cylinder010_Material004_0"
                  geometry={nodes.Cylinder010_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cylinder.010_Material.004_0" }}
                />
              </group>
              <group
                name="Cylinder011"
                position={[660.797, 520.83, -664.35]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[5.383, 5.383, 71.106]}
                userData={{ name: "Cylinder.011" }}
              >
                <mesh
                  name="Cylinder011_Material004_0"
                  geometry={nodes.Cylinder011_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cylinder.011_Material.004_0" }}
                />
              </group>
              <group
                name="Cylinder012"
                position={[364.109, 520.83, -664.35]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[5.383, 5.383, 71.106]}
                userData={{ name: "Cylinder.012" }}
              >
                <mesh
                  name="Cylinder012_Material004_0"
                  geometry={nodes.Cylinder012_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cylinder.012_Material.004_0" }}
                />
              </group>
              <group
                name="Cylinder001"
                position={[-517.834, 520.83, 676.811]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[5.383, 5.383, 71.106]}
                userData={{ name: "Cylinder.001" }}
              >
                <mesh
                  name="Cylinder001_Material004_0"
                  geometry={nodes.Cylinder001_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cylinder.001_Material.004_0" }}
                />
                <mesh
                  name="Cylinder001_Material002_0"
                  geometry={nodes.Cylinder001_Material002_0.geometry}
                  material={materials["Material.002"]}
                  userData={{ name: "Cylinder.001_Material.002_0" }}
                />
              </group>
              <group
                name="Cylinder003"
                position={[-517.834, 520.83, -698.373]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[5.383, 5.383, 71.106]}
                userData={{ name: "Cylinder.003" }}
              >
                <mesh
                  name="Cylinder003_Material004_0"
                  geometry={nodes.Cylinder003_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cylinder.003_Material.004_0" }}
                />
                <mesh
                  name="Cylinder003_Material002_0"
                  geometry={nodes.Cylinder003_Material002_0.geometry}
                  material={materials["Material.002"]}
                  userData={{ name: "Cylinder.003_Material.002_0" }}
                />
              </group>
              <group
                name="Cube003"
                position={[482.297, 1129.859, 860.534]}
                rotation={[-Math.PI / 2, 0, -0.014]}
                scale={[4.266, 24.519, 18.726]}
                userData={{ name: "Cube.003" }}
              >
                <mesh
                  name="Cube003_Material016_0"
                  geometry={nodes.Cube003_Material016_0.geometry}
                  material={materials["Material.016"]}
                  userData={{ name: "Cube.003_Material.016_0" }}
                />
                <mesh
                  name="Cube003_Material015_0"
                  geometry={nodes.Cube003_Material015_0.geometry}
                  material={materials["Material.015"]}
                  userData={{ name: "Cube.003_Material.015_0" }}
                />
              </group>
              <group
                name="Spot"
                position={[485.881, 960.553, 543.328]}
                rotation={[0.278, -0.001, -0.003]}
                scale={222.559}
                userData={{ name: "Spot" }}
              >
                <group
                  name="Object_49"
                  rotation={[Math.PI / 2, 0, 0]}
                  userData={{ name: "Object_49" }}
                >
                  <group name="Object_50" userData={{ name: "Object_50" }} />
                </group>
              </group>
              <group
                name="Cube004"
                position={[-669.868, 1129.859, 860.534]}
                rotation={[-Math.PI / 2, 0, -0.014]}
                scale={[4.266, 24.519, 18.726]}
                userData={{ name: "Cube.004" }}
              >
                <mesh
                  name="Cube004_Material016_0"
                  geometry={nodes.Cube004_Material016_0.geometry}
                  material={materials["Material.016"]}
                  userData={{ name: "Cube.004_Material.016_0" }}
                />
                <mesh
                  name="Cube004_Material015_0"
                  geometry={nodes.Cube004_Material015_0.geometry}
                  material={materials["Material.015"]}
                  userData={{ name: "Cube.004_Material.015_0" }}
                />
              </group>
              <group
                name="Spot001"
                position={[-666.284, 960.553, 543.328]}
                rotation={[0.278, -0.001, -0.003]}
                scale={222.559}
                userData={{ name: "Spot.001" }}
              >
                <group
                  name="Object_55"
                  rotation={[Math.PI / 2, 0, 0]}
                  userData={{ name: "Object_55" }}
                >
                  <group name="Object_56" userData={{ name: "Object_56" }} />
                </group>
              </group>
              <group
                name="Cube006"
                position={[-669.692, 1129.859, -759.823]}
                rotation={[-Math.PI / 2, 0, -3.135]}
                scale={[4.266, 24.519, 18.726]}
                userData={{ name: "Cube.006" }}
              >
                <mesh
                  name="Cube006_Material016_0"
                  geometry={nodes.Cube006_Material016_0.geometry}
                  material={materials["Material.016"]}
                  userData={{ name: "Cube.006_Material.016_0" }}
                />
                <mesh
                  name="Cube006_Material015_0"
                  geometry={nodes.Cube006_Material015_0.geometry}
                  material={materials["Material.015"]}
                  userData={{ name: "Cube.006_Material.015_0" }}
                />
              </group>
              <group
                name="Spot002"
                position={[-666.46, 960.553, -442.612]}
                rotation={[2.863, -0.019, 3.133]}
                scale={222.559}
                userData={{ name: "Spot.002" }}
              >
                <group
                  name="Object_61"
                  rotation={[Math.PI / 2, 0, 0]}
                  userData={{ name: "Object_61" }}
                >
                  <group name="Object_62" userData={{ name: "Object_62" }} />
                </group>
              </group>
              <group
                name="Cube007"
                position={[498.495, 1129.859, -759.823]}
                rotation={[-Math.PI / 2, 0, -3.135]}
                scale={[4.266, 24.519, 18.726]}
                userData={{ name: "Cube.007" }}
              >
                <mesh
                  name="Cube007_Material016_0"
                  geometry={nodes.Cube007_Material016_0.geometry}
                  material={materials["Material.016"]}
                  userData={{ name: "Cube.007_Material.016_0" }}
                />
                <mesh
                  name="Cube007_Material015_0"
                  geometry={nodes.Cube007_Material015_0.geometry}
                  material={materials["Material.015"]}
                  userData={{ name: "Cube.007_Material.015_0" }}
                />
              </group>
              <group
                name="Spot003"
                position={[501.726, 960.553, -442.612]}
                rotation={[2.863, -0.019, 3.133]}
                scale={222.559}
                userData={{ name: "Spot.003" }}
              >
                <group
                  name="Object_67"
                  rotation={[Math.PI / 2, 0, 0]}
                  userData={{ name: "Object_67" }}
                >
                  <group name="Object_68" userData={{ name: "Object_68" }} />
                </group>
              </group>
              <group
                name="Plane003"
                position={[-883.325, 1021.517, 43.475]}
                rotation={[0, 1.57, 0]}
                scale={[208.806, 110.773, 141.634]}
                userData={{ name: "tabela_esquerda" }}
              >
                <RigidBody
                  type="fixed"
                  colliders={"trimesh"}
                  friction={1}
                  restitution={1}
                >
                  <mesh
                    name="Plane003_Material005_0"
                    geometry={nodes.Plane003_Material005_0.geometry}
                    material={materials["Material.005"]}
                    userData={{ name: "Plane.003_Material.005_0" }}
                  />
                  <mesh
                    name="Plane003_Material006_0"
                    geometry={nodes.Plane003_Material006_0.geometry}
                    material={materials["Material.006"]}
                    userData={{ name: "Plane.003_Material.006_0" }}
                  />
                  <mesh
                    name="Plane003_Material004_0"
                    geometry={nodes.Plane003_Material004_0.geometry}
                    material={materials.material_0}
                    userData={{ name: "Plane.003_Material.004_0" }}
                  />
                </RigidBody>
              </group>
              <group
                name="Cube008"
                position={[-870.735, 950.6, 43.395]}
                rotation={[-Math.PI / 2, 0, -3.138]}
                scale={20.091}
                userData={{ name: "Cube.008" }}
              >
                <RigidBody type="fixed" colliders={"hull"}>
                  <mesh
                    name="Cube008_Material005_0"
                    geometry={nodes.Cube008_Material005_0.geometry}
                    material={materials["Material.005"]}
                    userData={{ name: "Cube.008_Material.005_0" }}
                  />
                </RigidBody>
              </group>
              <group
                name="Circle001"
                position={[-814.586, 951.488, 43.194]}
                rotation={[-Math.PI / 2, 0, -3.138]}
                scale={34.565}
                userData={{ name: "aro_esquerda" }}
              >
                <RigidBody type="fixed" colliders={false}>
                  <ConeCollider
                    name="basket-up"
                    ref={colliderRef}
                    args={[0.05, 0.7]}
                    position={[0, 0, -0.2]}
                    rotation={[Math.PI / 2, 0, 0]}
                    sensor={true}
                    onIntersectionEnter={() => {
                      if (colliderOrderLeft === "empty_left")
                        setColliderOrderLeft("top_left");
                      if (colliderOrderLeft === "botton_left")
                        setColliderOrderLeft("empty_left");
                    }}
                  />

                  <CylinderCollider
                    name="basket-botton"
                    ref={colliderRef}
                    args={[0.05, 0.7]}
                    position={[0, 0, -0.6]}
                    rotation={[Math.PI / 2, 0, 0]}
                    sensor={true}
                    onIntersectionEnter={() => {
                      if (colliderOrderLeft === "empty_left")
                        setColliderOrderLeft("botton_left");
                      if (colliderOrderLeft === "botton_left")
                        setColliderOrderLeft("empty_left");
                      if (colliderOrderLeft === "top_left") {
                        setColliderOrderLeft("empty_left");
                        console.log("GOAL LEFT");
                      }
                    }}
                  />

                  <mesh
                    geometry={nodes.Circle001_Material005_0.geometry}
                    material={materials["Material.005"]}
                  />
                </RigidBody>

                <RigidBody type="fixed" colliders={"trimesh"}>
                  <mesh visible={true} position={[0, 0, 0]}>
                    <torusGeometry args={[1.05, 0.1, 7, 30]} />
                    <meshPhysicalMaterial
                      color="blue"
                      opacity={0}
                      transparent
                    />
                  </mesh>
                </RigidBody>
              </group>
              <group
                name="Cylinder002"
                position={[-814.586, 914.923, 43.194]}
                rotation={[-Math.PI / 2, 0, -3.138]}
                scale={33.754}
                userData={{ name: "rede_esquerda" }}
              >
                <RigidBody type="fixed" colliders={"trimesh"}>
                  <mesh
                    name="Cylinder002__0"
                    geometry={nodes.Cylinder002__0.geometry}
                    material={materials.Cylinder__0}
                    userData={{ name: "Cylinder.002__0" }}
                  />
                </RigidBody>
              </group>
              <group
                name="Cube009"
                position={[-1025.617, 511.866, 43.985]}
                rotation={[-Math.PI / 2, 0, -3.138]}
                scale={[24.765, 31.635, 27.534]}
                userData={{ name: "Cube.009" }}
              >
                <mesh
                  name="Cube009_Material004_0"
                  geometry={nodes.Cube009_Material004_0.geometry}
                  material={materials.material_0}
                  userData={{ name: "Cube.009_Material.004_0" }}
                />
                <mesh
                  name="Cube009_Material012_0"
                  geometry={nodes.Cube009_Material012_0.geometry}
                  material={materials["Material.012"]}
                  userData={{ name: "Cube.009_Material.012_0" }}
                />
              </group>
              <group
                name="Cube010"
                position={[-1058.163, 661.364, 990.71]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[222.559, 6.053, 157.956]}
                userData={{ name: "Cube.010" }}
              >
                <mesh
                  name="Cube010_Material005_0"
                  geometry={nodes.Cube010_Material005_0.geometry}
                  material={materials["Material.005"]}
                  userData={{ name: "Cube.010_Material.005_0" }}
                />
              </group>
              <group
                name="Cube011"
                position={[434.068, 661.364, 990.71]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[222.559, 6.053, 157.956]}
                userData={{ name: "Cube.011" }}
              >
                <mesh
                  name="Cube011_Material005_0"
                  geometry={nodes.Cube011_Material005_0.geometry}
                  material={materials["Material.005"]}
                  userData={{ name: "Cube.011_Material.005_0" }}
                />
              </group>
              <group
                name="Cube012"
                position={[-1021.817, 690.445, -898.917]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[222.559, 6.053, 157.956]}
                userData={{ name: "Cube.012" }}
              >
                <mesh
                  name="Cube012_Material005_0"
                  geometry={nodes.Cube012_Material005_0.geometry}
                  material={materials["Material.005"]}
                  userData={{ name: "Cube.012_Material.005_0" }}
                />
              </group>
              <group
                name="Cube013"
                position={[-1296.592, 690.445, 738.528]}
                rotation={[-Math.PI / 2, 0, 1.572]}
                scale={[214.472, 6.053, 157.956]}
                userData={{ name: "Cube.013" }}
              >
                <mesh
                  name="Cube013_Material005_0"
                  geometry={nodes.Cube013_Material005_0.geometry}
                  material={materials["Material.005"]}
                  userData={{ name: "Cube.013_Material.005_0" }}
                />
              </group>
              <group
                name="Cube014"
                position={[1230.816, 690.445, 738.528]}
                rotation={[-Math.PI / 2, 0, 1.566]}
                scale={[214.472, 6.053, 157.956]}
                userData={{ name: "Cube.014" }}
              >
                <mesh
                  name="Cube014_Material005_0"
                  geometry={nodes.Cube014_Material005_0.geometry}
                  material={materials["Material.005"]}
                  userData={{ name: "Cube.014_Material.005_0" }}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/3d/basket-court/scene.gltf");
